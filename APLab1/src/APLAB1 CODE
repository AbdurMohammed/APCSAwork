Code Written in Review.java:

public static double totalSentiment(String fileName){

    String sentimentStr = textToString(fileName);

    String[] words = sentimentStr.split("\\W+");
    for(int i = 0; i < words.length; i++){
      words[i] = removePunctuation(words[i]);
    }

    double sentimentCounter = 0;
    double wordSentiment;

    for (int i = 0; i < words.length; i++){
      wordSentiment = sentimentVal(words[i]);
      sentimentCounter += wordSentiment;
    }

    return sentimentCounter;
  }


  public static int reviewLength(String fileName){
      String sentimentStr = textToString(fileName);

      String[] words = sentimentStr.split("\\W+");
      for(int i = 0; i < words.length; i++){
        words[i] = removePunctuation(words[i]);
      }

      return words.length;

    }

    public static int starRating(String fileName){

      double sentiment = totalSentiment(fileName);
      int starRating;

      double sentimentRange = 2 * reviewLength(fileName);
      double sentimentInterval = sentimentRange / 5;

      if(0 < sentiment && sentiment <= sentimentInterval){
        return starRating = 1;
      }
      else if(sentimentInterval < sentiment && sentiment <= 2 * sentimentInterval){
        return starRating = 2;
      }
      else if(sentimentInterval * 2 < sentiment && sentiment <= 3 * sentimentInterval){
        return starRating = 3;
      }
      else if(sentimentInterval * 3 < sentiment && sentiment <= 4 * sentimentInterval){
        return starRating = 4;
      }
      else if(sentimentInterval * 4 < sentiment && sentiment <= 5 * sentimentInterval){
        return starRating = 5;
      }
      return starRating = 0;
    }


    public static String fakeReview(String fileName){

        String review = textToString(fileName);
        int wordStart;
        int wordEnd = 0;
        String strBeg, strEnd;

        do {
          wordStart = review.indexOf("*");

          if(wordStart < 0){
            break;
          }

          for (int j = wordStart; j < review.length(); j++) {
            if (Character.isWhitespace(review.charAt(j))) {
              wordEnd = j - 1;
              break;
            }
          }

          strBeg = review.substring(0, wordStart);
          strEnd = review.substring(wordEnd + 1);
          review = strBeg + randomPositiveAdj() + strEnd;
        } while (wordStart > 0);

        return review;
      }

Code written in Tester.java:

public class Tester {
    public static void main(String[] args) {

        // Activity 1 method calls
        System.out.println(Review.sentimentVal("awesome"));
        System.out.println(Review.sentimentVal("backed"));
        System.out.println(Review.sentimentVal("decline"));


         //Activity 2 method calls

        double totalSentiment = Review.totalSentiment("SimpleReview.txt");
        System.out.println(totalSentiment);

        int rating = Review.starRating("SimpleReview.txt");
        System.out.println(rating);

        totalSentiment = Review.totalSentiment("PositiveReview.txt");
        System.out.println(totalSentiment);

        rating = Review.starRating("PositiveReview.txt");
        System.out.println(rating);



        String fakeReview = Review.fakeReview("SimpleReview.txt");
        System.out.println(fakeReview);

    }
}


Code Written in Lab1OE.java (open-ended):
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class Lab1OE {
    public static void main(String[] args) {

        System.out.println("Enter your grades, enter -1 to stop.");

        Scanner kb = new Scanner(System.in);
        double grade;
        ArrayList<Double> grades = new ArrayList<Double>();

        do {
            grade = kb.nextDouble();

            if (grade == -1) {
                break;
            }

            grades.add(grade);

        } while (grade != -1);

        double avg = findAvg(grades);
        System.out.println("Your average is: " + avg);

        String letterGrade = toLetterGrade(avg);
        System.out.println("Your letter grade is: " + letterGrade);

        String feedback = feedback(grades);
        System.out.println(feedback);


    }

    public static double findAvg(ArrayList grades) {
        double sum = 0;
        double avg;
        for (int i = 0; i < grades.size(); i++) {
            sum += (double) grades.get(i);
        }
        avg = sum / grades.size();
        return avg;
    }

    public static String toLetterGrade(double grade) {

        String letterGrade = null;

        if (grade < 60) {
            letterGrade = "F";
        } else if (60 <= grade && grade <= 70) {
            letterGrade = "D";
        } else if (70 < grade && grade <= 80) {
            letterGrade = "C";
        } else if (80 < grade && grade <= 90) {
            letterGrade = "B";
        } else if (90 < grade && grade <= 100) {
            letterGrade = "A";
        }

        return letterGrade;


    }

    public static String feedback(ArrayList grades){

        double minGrade = (double) grades.get(0);

        for (int i = 0; i < grades.size(); i++){
            if((double) grades.get(i) < minGrade){
                minGrade = (double) grades.get(i);
            }

        }

        return "Your lowest grade was a " + minGrade + ", maybe you should review that one.";

    }
}